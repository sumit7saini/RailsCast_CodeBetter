{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh12740\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Def self.all_names\
  find( :all ) . collect( &:name )\
end\
\
Above method in the Project model has an odd syntax with the ampersand then symbol.\
This Symbol is called to_proc and a functionality of rails not ruby.\
\
Projects = Project.find( :all )\
But we want only project names in array not the whole rows. So, use the collect method, which takes a block. Collect method iterates applies code in block to each element in the array. \
project.collect \{ |p| p.name \}\
\
Basically, the Symbol to_proc is a shortcut way to doing above instead of using blocks.\
projects.collect \{ &:name \}\
This does the same thing i.e. a method is called on each object passed through the block(here proc)\
\
You can combine method calls:\
project.collect(&:name).collect(&:upcase) \
\
The technique can be applied to any method that takes a block.\
\
Some other examples of using this shortcut on calling methods in blocks are:\
Projects.all?( &:valid?)\
Projects.any?( &:valid?)\
Projects.each ( &:save)\
}